name: Deploy to Cloudflare

on:
  push:
    branches:
      - main  # or your default branch
  workflow_dispatch:  # allows manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      NEXT_PUBLIC_BACKEND_URL: ${{ secrets.NEXT_PUBLIC_BACKEND_URL }}
      NEXT_PUBLIC_WIDGET_SERVICE_URL: ${{ secrets.NEXT_PUBLIC_WIDGET_SERVICE_URL }}
      NEXT_PUBLIC_SOLANA_RPC_URL: ${{ secrets.NEXT_PUBLIC_SOLANA_RPC_URL }}
      NEXT_PUBLIC_PRIVY_APP_ID: ${{ secrets.NEXT_PUBLIC_PRIVY_APP_ID }}
      CDP_API_KEY_NAME: ${{ secrets.CDP_API_KEY_NAME }}
      CDP_API_KEY_PRIVATE_KEY: ${{ secrets.CDP_API_KEY_PRIVATE_KEY }}
      TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
      HELIUS_RPC_URL: ${{ secrets.HELIUS_RPC_URL }}
      PRIVY_APP_ID: ${{ secrets.PRIVY_APP_ID }}
      PRIVY_APP_SECRET: ${{ secrets.PRIVY_APP_SECRET }}
      COSMOS_ENDPOINT: ${{ secrets.COSMOS_ENDPOINT }}
      COSMOS_KEY: ${{ secrets.COSMOS_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      NEXTJS_ENV: development
      DISABLE_NODE_FETCH_NATIVE_WARN: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.1'  # Matching your solana-agent-kit requirement

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.5  # Matching your package.json
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile
          pnpm add -D @opennextjs/cloudflare@0.5.3

      - name: Generate Cloudflare types
        run: pnpm run cf-typegen

      - name: Build and prepare for Cloudflare
        run: |
          pnpm exec opennextjs-cloudflare

      - name: Deploy to Cloudflare
        working-directory: ${{ github.workspace }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_KEY }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          pnpm exec wrangler deploy --api-key "$CLOUDFLARE_API_TOKEN" --account-id "$CLOUDFLARE_ACCOUNT_ID" 
